# Default values for query-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- number of pods to run
replicaCount: 1

# -- Image to use for deployment
image:
  repository: adonato/query-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# -- Image pull secrets if you want to host the image
imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9560

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

prometheus:
  monitor:
    enabled: false
    additionalLabels: {}
    interval: 15s
    namespace: []
    path: "/metrics"

# -- Configure your database access and metrics to expose
config: |-
  databases:
    db1:
      dsn: sqlite://
      connect-sql:
        - PRAGMA application_id = 123
        - PRAGMA auto_vacuum = 1
      labels:
        region: us1
        app: app1

  metrics:
    metric1:
      type: gauge
      description: A sample gauge

  queries:
    query1:
      interval: 5
      databases: [db1]
      metrics: [metric1]
      sql: SELECT random() / 1000000000000000 AS metric1